taskActorSystem  {

 akka {
      # Log the complete configuration at INFO level when the actor system is started.
      # This is useful when you are uncertain of what configuration is used.
      log-config-on-start = off

      # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
      # to STDOUT)
      loggers = ["akka.event.slf4j.Slf4jLogger"]

      # Log level used by the configured loggers (see "loggers") as soon
      # as they have been started; before that, see "stdout-loglevel"
      # Options: OFF, ERROR, WARNING, INFO, DEBUG
      loglevel = "INFO"

      # Filter of log events that is used by the LoggingAdapter before
      # publishing log events to the eventStream.
      logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

    actor {

        # FQCN of the ActorRefProvider to be used; the below is the built-in default,
        # another one is akka.remote.RemoteActorRefProvider in the akka-remote bundle.
        provider = "akka.actor.LocalActorRefProvider"

        # The guardian "/user" will use this class to obtain its supervisorStrategy.
        # It needs to be a subclass of akka.actor.SupervisorStrategyConfigurator.
        # In addition to the default there is akka.actor.StoppingSupervisorStrategy.
        # guardian-supervisor-strategy = "akka.actor.DefaultSupervisorStrategy"

			deployment  {
				/taskManagerActor {
					router = smallest-mailbox-pool
					nr-of-instances = 1
				}
			}
            deployment  {
            	/taskManagerActor/"*"/robotActor {
            		router = smallest-mailbox-pool
            		nr-of-instances = 10
            	}
            }
        }
    }
}
